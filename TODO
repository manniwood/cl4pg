
-------- v1.0.x

- Document fluent use for each example

- Document why reflection is used to call constructors
or setters directly rather than using hacky bytecode injection
tricks to set the attributes directly instead (makes setters
for compound attributes impossible).

- Document why v1 is in package names.

- Document how beans need no special markup.

- Document how to use pgSession in try/catch checkout/return
from within, let's say, a webapp using connection pooling.

- Write documentation in docs/more

-------- v1.1.x

- Write .procSelect
- Write .qProcSelect
- Write .procSelectOne
- Write .qProcSelectOne
- Write .procSelectScalar
- Write .qProcSelectScalar
- Write .procSelectOneScalar
- Write .qProcSelectOneScalar

- Write typeconverters for all types in PgJDBC driver (including array types)

- selectReport that returns map of string:colname string:value
for use in quick reporting displays where all values
would end up being cast to string anyway.

- selectMap that returns map of String:colname Object:value
for when a user just needs a quick way of getting the objects
out of a query, and doesn't mind doing the casting himself.

- find and document that JVM setting that makes java turn
reflection calls into compiled code faster (instead of waiting
for the default number of invocations).

- sql to be executed on startup of connection

- Converters registerable and addable by end-users

- Batch inserts

